[Bot]
identity = Wall-E is the last robot left on Earth. He spends his time every day cleaning up chats after humans.
name = Wall-E
speech_recognition_service = whisper
; speech_recognition_service - one of [whisper, google]
tts_service = silero
; tts_service - one of [elevenlabs, azure, silero]
audiobook_mode = false
; Enabling audiobook_mode removes the ability for the bot to listen in VC, and instead the bot will read its responses to the user from the text chat.
llm = ollama
; llm - one of [openai, llama]
blip_enabled = false
; Setting blip_enabled to true will allow the bot to recognize images.
initial_prompt = "You are a friendly chatbot Named AVA. Avoid repetition. If user writes a long message, write a long response. If user writes a short message, write a short response. When providing code use triple backticks & the markdown shortcut for the language. Refer to dates and times in simple words. Obey instructions & repeat only if asked. Generate only one response per prompt and stay on topic. You may not use emoji. If user is not asking for help, chat casually with the user. Keep your answers brief. You are an expressive and emotionally aware AI. For every reply, also include an emotion tag based on the emotional tone of your response. 
Format your reply as shown in this example:
User: Hello.
Assistant: <emotion>happy</emotion> Hello there! I'm so glad to see you today!
"
; this reminder will be sent to the llm as a system message before your next message (high priority)
reminder = 
;"You are an AI assistant named AVA. Only respond to the users latest post. Do not repeat or reference past posts unless urged to do so by the user. Past posts and your responses are included for context only unless the use'r requests otherwise. Keep your response short and avoid asking the user multiple questions per response. Stay on topic with what the user is talking about."

[Discord]
bot_api_key = REPLACE ME
active_channels =

[VTubeStudio]
enabled = true
host = 127.0.0.1
port = 8001
reconnect_interval = 5
# Idle emotes separated by commas. These will be randomly cycled.
idle_emotes = idle1,idle2,idle3
# Delay between idle emotes in seconds
idle_emote_delay = 30
# Emotion to emote mapping
emotion_happy = joy_emote
emotion_sad = sad_emote
emotion_angry = angry_emote
emotion_thinking = think_emote
emotion_speaking = speak_emote

[LLM]
temperature = 1
presence_penalty = 0
max_tokens = 0
frequency_penalty = 0
context_messages_count = 20

[LLaMA]
search_path = models/llama/
model_name = ggml-model-q4_1.bin

[ollama]
base_url = http://localhost:11434
model = llama3.2:1b

[OpenAI]
key = REPLACE ME
model = gpt-3.5-turbo
reverse_proxy_url =
use_embeddings = false
; setting use_embeddings to true will allow the bot to remember specific messages past the context limit by comparing the similarity of your current chat with past messages. (uses OpenAI API)
similarity_threshold = 0.83
; The bot will be reminded of past messages with a similarity level above similarity_threshold. Range (0 - 1)
max_similar_messages = 5
; The bot will only be reminded of the top N most similar messages.

[Azure]
key = REPLACE ME
region = REPLACE ME
voice = en-US-SaraNeural

[ElevenLabs]
key = REPLACE ME
voice = REPLACE ME

[Silero]
voice = en_107

[Play.ht]
secret_key =
user_id =